idp:
    idpName: keycloak
    clientId: blog-auth-private
    clientSecret: k94Hna2SQdRmEhgQqedOBh0LqvMxpFH7
    serverUri: http://localhost:9003
    realm: fusion-master
    authorizationGrantType: authorization_code


server:
  port: 9001
  servlet:
    context-path: /

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    enabled: true
    oauth:
      realm: fusion-master
      client-id: blog-auth-private
      client-secret: k94Hna2SQdRmEhgQqedOBh0LqvMxpFH7

spring:
  devtools:
    restart:
      enabled: true
  application:
    name: blog-service
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: 'create-drop'
#      ddl-auto: 'update'
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
  security:
    #    oauth2:
    #      resourceserver:
    #        jwt:
    #          issuer-uri: http://localhost:8080/realms/fusion-master
    #          jwk-set-uri: http://localhost:8080/realms/fusion-master/protocol/openid-connect/certs
    #          audience: account
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9003/realms/fusion-master
      client:
        registration:
          keycloak:
            client-id: blog-auth-private
            client-secret: k94Hna2SQdRmEhgQqedOBh0LqvMxpFH7
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:9003/login/oauth2/code/keycloak
        provider:
          keycloak:
            issuer-uri: http://localhost:9003/realms/fusion-master
            user-name-attribute: preferred_username
  docker:
    compose:
      lifecycle-management: START_AND_STOP

logging:
  level:
    org.springframework: INFO
    org.hibernate.SQL: INFO
    org.springframework.security: debug
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
    org.hibernate.type.descriptor.sql.BasicExtractor: INFO



